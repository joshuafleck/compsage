RAILS_ROOT = "/var/www/compsage/current"

God.watch do |w|
  w.name = 'beanstalkd'
  w.interval = 30.seconds
  
  w.start = "beanstalkd -l 0.0.0.0 -d && pidof beanstalkd > #{RAILS_ROOT}/log/beanstalkd.pid && rake -f #{RAILS_ROOT}/Rakefile bd:icj RAILS_ENV=production && rake -f #{RAILS_ROOT}/Rakefile bd:irj RAILS_ENV=production"
  w.stop = "kill `ps axf | grep beanstalkd | grep -v grep | awk '{print $1}'`"

  w.uid = 'www'
  w.gid = 'www'

  w.log = "#{RAILS_ROOT}/log/watches.log" 

  w.start_grace = 10.seconds
  w.restart_grace = 10.seconds

  w.behavior(:clean_pid_file)
  w.pid_file = File.join(RAILS_ROOT, "log/beanstalkd.pid")

  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 5.seconds
      c.running = false
    end
  end
end  

God.watch do |w|
  w.name = 'searchd'
  w.interval = 30.seconds
  
  w.start = "rake -f #{RAILS_ROOT}/Rakefile ts:start RAILS_ENV=production"
  w.stop = "rake -f #{RAILS_ROOT}/Rakefile ts:stop RAILS_ENV=production"

  w.uid = 'www'
  w.gid = 'www'
  
  w.start_grace = 10.seconds
  w.restart_grace = 10.seconds

  w.pid_file = File.join(RAILS_ROOT, "log/searchd.production.pid")
  w.behavior(:clean_pid_file)

  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.interval = 5.seconds
      c.running = false
    end
  end
end

God.watch do |w|
  w.name = 'dispatcher'
  w.interval = 30.seconds

  w.start = "ruby #{RAILS_ROOT}/lib/beanstalk_dispatcher.rb production"
  w.stop = "kill `ps axf | grep beanstalk_dispatcher.rb | grep -v grep | awk '{print $1}'`"

  w.uid = 'www'
  w.gid = 'www'
  
  w.start_grace = 10.seconds
  w.restart_grace = 10.seconds

  w.behavior(:clean_pid_file)

  w.start_if do |start|
    start.condition(:process_running) do |c|
      c.running = false
    end
  end

  w.lifecycle do |on|
    on.condition(:flapping) do |c|
      c.to_state = [:start, :restart]
      c.times = 5
      c.within = 5.minute
      c.transition = :unmonitored
      c.retry_in = 10.minutes
      c.retry_times = 5
      c.retry_within = 2.hours
    end
  end
end
