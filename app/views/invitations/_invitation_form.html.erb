<%=flash_messages%>
<% if @invalid_invitations.size > 0 then %>
  <div class="errorExplanation">
    <h2><%=t :header, :scope => [:activerecord, :errors, :template], :model => "invitation", :count => @invalid_invitations.size %></h2>
    <p><%=t :body, :scope => [:activerecord, :errors, :template] %></p>
    <ul>
      <% @invalid_invitations.each do |invite| %>
        <li><%= invite.to_s %>: <%= invite.errors.full_messages.to_sentence %></li>
      <% end %>
    </ul>
  </div>
<% end %>
<div class="left_column third_column" id="invite_network_list">
  <h3>Networks</h3>
  <% if @networks.any? then %>
    <ul id="networks" class="entity_list">
      <% @networks.each do |network|
        next if network.organizations.count < 2
        %>
        <li class="network" id="network_<%= network.id %>">
          <a href="#" class="expand_network">+</a>
          <%= network.name %>
          <a href="#" class="invite">Add</a>
            <div id="network_<%= network.id %>_members" class="network_members_container" style="display: none;">
              <div class="description_box"><%= auto_link_new_window(truncate(network.description, :length => 50))%></div>
              <h4>Members</h4>
              <ul class="network_members entity_list">
                <% network.organizations.each do |member|
                  next if member == current_organization %>
                  <li><%= link_to_organization(member) %></li>
                <% end %>
              </ul>
            </div>
        </li>
      <% end %>
    </ul>
  <% else %>
    <p>You're not in any networks! You can save time by <%= link_to "creating a network", new_network_path %> of
    frequently used contacts.</p>
  <% end %>
</div>
<div class="two_third_main_column">
  <h3>Invitation List</h3>
  <ul id="invitations" class="entity_list">
    <li><%=link_to_organization(current_organization)%></li>
    <% @invitations.each do |invitation| %>
      <li>
        <%if invitation.is_a?(SurveyInvitation) || invitation.is_a?(NetworkInvitation) then%>
          <%=link_to_organization(invitation.invitee) %>
        <%else%>      
          <%=invitation.organization_name%> (<%=invitation.email%>)
        <%end%>
      </li>
    <% end %>
  </ul>

  <form action="" method="post" id="invitation_form">
    <div id="send_invitations">
      <h3>New Invitation</h3>
      <div id="external_invitation_error_messages" class="errorExplanation" style="display:none;">
        <h2>We could not send your invitation</h2>
        <ul id="external_invitation_form_errors">
          <li id="external_invitation_organization_error">Organization Name is required.</li> 
          <li id="external_invitation_email_error">Email is required and should look like an email address.</li>
        </ul>
      </div>
      <div id="external_invitation_organization_name_wrapper">
        <label><%= required('Organization Name') %></label>
        <input type="text" id="external_invitation_organization_name" size="30" />
        <div id="search_results" class="autocomplete"></div>
      </div>
      <div id="external_invitation_form">
        <div id="external_invitation_email_wrapper">
          <label for="external_invitation_email"><%= required("Email Address") %></label>
          <input type="text" id="external_invitation_email" size="30" />
        </div>

        <input id="external_invitation_submit" type="submit" value="Add" />
      </div>
    </div>
  </form>
</div>
<script type="text/javascript" src="/javascripts/fast_autocompleter.js"></script>
<script type="text/javascript">
//The previous search text
var lastSearch = '';


function initializeObservers() {

  var cachedBackend = new Autocompleter.Cache(liveOrganizationSearch, {
    choices: 10,
    dataToQueryParam: function(data) { return data.name },
  });

  var cachedLookup = cachedBackend.lookup.bind(cachedBackend);

  new Autocompleter.Json('external_invitation_organization_name', 'search_results', cachedLookup, {
    'list_generator': function(choices) {
      var list = new Element('ul');

      choices.each(function(choice) {
        var li = new Element('li');
        li.insert('<div class="actions"><a href="javascript:;">Add Invitation</a></div>' + 
          '<div class="name">' + choice.name + '</div>') 
        if(choice.location) {
          li.insert('<div class="location description_box">Location: ' + choice.location + '</div>');
        }
        li.data = choice;
        list.insert(li);
      });

      return list;
      },
    'minChars': 2,
    'delay': 0.1,
    'updateElement': function(li) {
      addInvitation(li.data);
    }
  });

  $$('#networks > li').each(function(network_li) {
    var network_id = network_li.id.match(/\d+/)[0]
    network_li.select('a').first().observe('click', function(e) {
      e.stop();
      $('network_' + network_id + '_members').toggle(); 
    });
    network_li.select('a.invite').first().observe('click', inviteNetwork.curry(network_id));
  })
  $('invitation_form').observe('submit', addInvitationByForm);
}


/*
 * This will send an ajax request to the server with the search text
 */
function liveOrganizationSearch(value, suggest) {
  new Ajax.Request('<%=search_organizations_path%>', {
    'method': 'get',
    'parameters': {'search_text': value},
    'requestHeaders': {'Accept':'application/json'},
    'onSuccess': function(transport) {
      suggest(transport.responseText.evalJSON());
    }
  });
}

function addInvitation(organization) {
  $('external_invitation_organization_name').value = '';
  addInvitationToList(0, organization.name_and_location, organization.id);
}

function addInvitationByForm(e) {
  e.stop();
  var org_name = $F('external_invitation_organization_name');
  addInvitationToList(0, org_name, null);
}


function addInvitationToList(invitation_id, organization_name, organization_id) {
  var newListElement = new Element('li', {'id': 'invitation_' + invitation_id});
  var removeLink = new Element('a', {'href':'#', 'style':'float:right;'});
  removeLink.insert('Remove');
  removeLink.observe('click', removeInvitation.curry(invitation_id));
  newListElement.insert(removeLink);

  if(organization_id)
    newListElement.insert('<a href="<%= organizations_path %>/' + organization_id + '">' + organization_name + '</a>');
  else
    newListElement.insert(organization_name);

  $('invitations').insert(newListElement);
  newListElement.highlight({'duration':2});
}

function removeInvitation(invitation_id, e) {
  e.stop();
  new Effect.Fade('invitation_' + invitation_id, {
    'afterFinish': function() {
      $('invitation_' + invitation_id).remove();
    }
  });
}

/* Stub for now */
function inviteNetwork(network_id) {
}
</script>

<% content_for :initialize_js, "initializeObservers();"%>
