<h2>Responding to <%=@survey.job_title%>
  <span class="sponsor">sponsored by <%=link_to @survey.sponsor.name, organization_path(@survey.sponsor)%></span>
</h2>
<h3>Job Description</h3>
<%=link_and_format(@survey.description, :class => "description_box")%>
<p>Effective date: <%=@survey.effective_date.to_s(:long_ordinal)%>. <%= link_to_function "Why?", "new Effect.toggle('why_section', 'blind', {duration: .5});return false;" %></p>
<div id="why_section" style="display:none;">To comply with the safe harbor guidelines issued by the U.S. Department of
  Justice and Federal Trade Commission, survey responses must be based on data <em>at least</em> 90 days old. </div>
<%=flash_messages%>
<%= error_messages_for :participation %>
<% form_for @participation, :url => respond_survey_path(@survey), :builder => QuestionFormBuilder do |f|%>
  <ol id="questions">
    <% @survey.top_level_questions.each do |question| %>
      <%= render :partial => 'questions/participation_form_question', :object => question,
        :locals => {:f => f, :level => 0} %>
    <% end %>
    </ol>   
  <div class="response_submit"><input type="submit" value="Submit My Responses" /><span  id='cancel_section'> or <%=link_to "Cancel", survey_path(@survey), :id => 'cancel_link' %></span></div>
<% end %>
<script type="text/javascript">
function observeQualificationLinks() {
  $$('div.qualifications').each(function(elem) {
    var link = elem.select('a').first();
    var input_div = elem.select('div.field').first();
    var input = input_div.select('input').first();

    if(input.value == '') {
      input_div.hide();
      link.innerHTML = 'Add Comment';
    }
    else {
      input_div.show();
      link.innerHTML = 'Cancel';
    }

    link.observe('click', function(e) {
      field = elem.select('div.field').first().toggle();
      e.target.innerHTML = e.target.innerHTML == 'Cancel' ? 'Add Comment' : 'Cancel';
      elem.select('input').first().value = "";
      e.stop();
    });
  });
}
function observeUnitSelection() {
  var unit_selects = $$('select.units');
  unit_selects.each(function(select) {
    select.observe('change', function(e) {
      var value = e.target.value;
      var css_class = e.target.className;
      unit_selects.each(function(select) {
        if(select.value == '' && select.className == css_class) {
          select.value = value;
        }
      });
    });
  });
}

function setupFollowups() {
  var root_list = $('questions');
  setupFollowupForList(root_list, null);
}

function setupFollowupForList(list, parent_questions) {
  list.childElements().each(function(item) {
    var sub_list = item.select('ol').first();
    var questions = item.childElements().first().select('input');
    if(sub_list) {
      questions.each(function(input){
        //ignore those of the type qualification
        if(!input.id.include('qualification')) {
          input.observe('click', function(e) {
            if(parseInt(e.target.value) == 0)
              enableList(sub_list);
            else
              disableList(sub_list);
          });
        }
      });
      
      if(!questions.any(function(q) {return q.checked && parseInt(q.value) == 0}))
        disableList(sub_list);
      setupFollowupForList(sub_list, questions);
    }
  });
}

function enableList(list) {
  list.childElements().each(function(li) {
	var elements = li.select('div').first().select('input');
	 elements.each(function(input) {
		input.removeAttribute('disabled');
		});
  })
}

function disableList(list) {
  list.childElements().each(function(li) {
    var elements = li.select('div').first().select('input');
    elements.each(function(input) {
      if(input.getAttribute('type').match(/checkbox|radio/))
        input.checked = false;
      else
        input.value = '';
      input.setAttribute('disabled', true);
    });
  })
}
</script>
<% content_for :initialize_js, "observeQualificationLinks();observeUnitSelection();setupFollowups();"%>
