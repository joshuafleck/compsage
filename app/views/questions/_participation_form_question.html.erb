<%
# hack below, need to handle case when multiple responses come through here. There may be multiple responses when
# editing a participation and deleting a question because the validation logic will create a blank question that
# will force a validation failure, which will then roll back the deletion of that very same question, resulting in a
# duplicate. By selecting the last of the responses, we select the blank one that was added, which ensures that the
# user sees a blank response with the validation error. TODO: A better way.
%>
<% response = [*@participation.response[participation_form_question.id]].last || participation_form_question.responses.new %>
<% puts "Here: #{response.inspect}" %>
<% f.fields_for response.class.name.underscore, response, :index => participation_form_question.id, :builder => QuestionFormBuilder do |q| %>
  <li class="<%= cycle("even", "odd") %>">
    <div class="question_container" style="padding-left:<%= level*2 %>em"> 
      <%= q.form_field %>
      <% if participation_form_question.response_class.accepts_qualification? then %>
        <div class="qualifications">
          <div class="field">
            <%=q.label :qualifications %>
            <%=q.text_field :qualifications %>
          </div>
          <span class="label"><a href="#"></a></span>
        </div>
      <% end %>
    </div>
    <% if participation_form_question.child_questions.any? then %>
      <ol class="questions">
        <%= render :collection => participation_form_question.child_questions,
          :partial => '/questions/participation_form_question',
          :locals => {:f => f, :level => level + 1} %>
      </ol>
    <% end %>
  </li>
<% end %>
