<% title "Responding to #{@survey.job_title}" %>
<% highlight_tab("surveys") %>
<%= render :partial => "questions/participation_form"%>
<% content_for :initialize_js, "createMasks();observeQualificationLinks();observeUnitSelection();setupFollowups();observeResponseForQualifications();"%>
<script type="text/javascript">
function observeQualificationLinks() {
  $$('div.qualifications').each(function(elem) {
    var link = elem.select('a').first();
    var input_div = elem.select('div.field').first();
    var input = input_div.select('input').first();

    if(input.value == '') {
      input_div.hide();
      link.innerHTML = 'Add Comment';
    }
    else {
      input_div.show();
      link.innerHTML = 'Cancel';
    }

    link.observe('click', function(e) {
      field = elem.select('div.field').first().toggle();
      e.target.innerHTML = e.target.innerHTML == 'Cancel' ? 'Add Comment' : 'Cancel';
      elem.select('input').first().value = "";
      e.stop();
    });
  });
}
function observeUnitSelection() {
  var unit_selects = $$('select.units');
  unit_selects.each(function(select) {
    select.observe('change', function(e) {
      var value = e.target.value;
      var css_class = e.target.className;
      unit_selects.each(function(select) {
        if(select.value == '' && select.className == css_class) {
          select.value = value;
        }
      });
    });
  });
} function setupFollowups() {
  var root_list = $('questions');
  setupFollowupForList(root_list, null);
}

function setupFollowupForList(list, parent_questions) {
  list.childElements().each(function(item) {
    var sub_list = item.select('ol').first();
    if(sub_list) {
      // get all the inputs for this question that aren't qualifications.
      var inputs = item.childElements().first().select('input:not([id$=qualifications])');
      inputs.each(function(input){
        input.observe('click', function(e) {
          if(parseInt(e.target.value) == 0)
            enableList(sub_list);
          else
            disableList(sub_list);
        });
      });
      
      if(!inputs.any(function(q) {return q.checked && parseInt(q.value) == 0}))
        disableList(sub_list);
      setupFollowupForList(sub_list, inputs);
    }
  });
}

function enableList(list) {
  list.childElements().each(function(li) {
    var elements = li.select('div').first().select('input');
    elements.each(function(input) {
      input.removeAttribute('disabled');
    });
  })
}

function disableList(list) {
  list.childElements().each(function(li) {
    var elements = li.select('div').first().select('input');
    elements.each(function(input) {
      if(input.getAttribute('type').match(/checkbox|radio/))
        input.checked = false;
      else
        input.value = '';
      input.setAttribute('disabled', true);
    });
  })
}

function observeResponseForQualifications(){
  questions = $('questions');
  questions.select('input').each(function(input){
    if(!input.id.include('qualifications') && !input.hasClassName('TextualResponse')) {
      if(input.getAttribute('type').match(/checkbox|radio/)){
        input.observe('click', function(e){
            input.up(1).down('div.qualifications').show();
        });
      }
      else{
        input.observe('blur', function(e){
          if (input.value == ''){
            input.next('.qualifications').select('input').first().value = '';
            input.next('.qualifications').hide();            
          }
          else{
            input.next('div.qualifications').show();
          }
        });
      }
    }
  });
}

  function createMasks() {
    $$('input.WageResponse, input.BaseWageResponse').each(function(field) {
      <% if @participation.errors.any? then %>
        var units = field.up().adjacent('select.units').first();
      <% else %>
        var units = field.adjacent('select.units').first();
      <% end %>
      new inputMask(field, 'currency', units);
    });

    $$('input.NumericalResponse').each(function(field) {
      new inputMask(field, 'number');
    });

    $$('input.PercentResponse').each(function(field) {
      new inputMask(field, 'percent');
    });
  }
</script>
