<% title "Responding to #{@survey.job_title}" %>
<% highlight_tab("surveys") %>
<% content_for :initialize_js, "createMasks();observeCommentLinks();observeUnitSelection();setupFollowups();"%>
<%= render :partial => "questions/participation_form"%>
<script type="text/javascript">
function observeCommentLinks() {
  $$('div.comments').each(function(elem) {
    var link = elem.select('a').first();
    var input_div = elem.select('div.field').first();
    var input = input_div.select('input').first();

    if(input.value == '') {
      input_div.hide();
      link.innerHTML = 'Add Comment';
    }
    else {
      input_div.show();
      link.innerHTML = 'Cancel';
    }

    link.observe('click', function(e) {
      field = elem.select('div.field').first().toggle();
      e.target.innerHTML = e.target.innerHTML == 'Cancel' ? 'Add Comment' : 'Cancel';
      elem.select('input').first().value = "";
      input.activate();
      e.stop();
    });
  });
}

function observeUnitSelection() {
  var unit_selects = $$('select.units');
  unit_selects.each(function(select) {
    select.observe('change', function(e) {
      var value = e.target.value;
      var css_class = e.target.className;
      unit_selects.each(function(select) {
        if(select.value == '' && select.className == css_class) {
          select.value = value;
        }
      });
    });
  });
}

function setupFollowups() {
  var root_list = $('questions');
  setupFollowupForList(root_list, null);
}

function setupFollowupForList(list, parent_questions) {
  list.childElements().each(function(item) {
    var sub_list = item.select('ol').first();
    if(sub_list) {
      // get all the inputs for this question that aren't comments.
      var inputs = item.childElements().first().select('input:not([id$=comments])');
      inputs.each(function(input){
        if(input.type == 'text') {
          input.observe('question:validinput', function(e) {
            if(input.value === '')
              disableList(sub_list, true);
            else
              enableList(sub_list);
          });
        }
        else {
          if(inputs.length == 2) {
            input.observe('click', function(e) {
              if(parseInt(e.target.value) == 0)
                enableList(sub_list);
              else
                disableList(sub_list, true);
            });
          }
          else {
            input.observe('click', function(e) {
              enableList(sub_list);
            });
          }

        }
          
      });

      // if there aren't any inputs that are a yes/no question answered yes, or a radio button that is checked, or a
      // multiple choice that is simply checked, or a text input that isn't blank, disable the follow-up questions by
      // default.
      if(!inputs.any(function(q) {return (inputs.length == 2 && q.type != 'text' && q.checked && parseInt(q.value) == 0) ||
                                         (inputs.length > 2 && q.type != 'text' && q.checked) ||
                                         (q.type == 'text' && q.value != '')}))
        disableList(sub_list, false);

      setupFollowupForList(sub_list, inputs);
    }
  });
}

function enableList(list) {
  list.childElements().each(function(li) {
    var elements = li.select('div').first().select('input');
    elements.each(function(input) {
      input.removeAttribute('disabled');
    });
  });
}

function disableList(list, disableChildren) {
  list.childElements().each(function(li) {
    var elements = li.select('div').first().select('input');
    elements.each(function(input) {
      var comments_div = null;
      if(input.getAttribute('type').match(/checkbox|radio/)){
        input.checked = false;
        comments_div = li.select('div.comments').first();
      }
      else {
        input.value = '';
        if (!input.hasClassName('TextualResponse') && !input.id.include('comments')){
          comments_div = li.select('div.comments').first();
        }
      }
      if(comments_div != null)
        clearAndHideComments(comments_div);
      input.setAttribute('disabled', true);
    });
    var sub_list = li.select('ol').first();
    if(sub_list && disableChildren)
      disableList(sub_list, true);
  })
}

  function createMasks() {
    $$('input.WageResponse, input.BaseWageResponse').each(function(field) {
      <% if @participation.errors.any? then %>
        var units = field.up().adjacent('select.units').first();
      <% else %>
        var units = field.adjacent('select.units').first();
      <% end %>
      new inputMask(field, 'currency', units);
    });

    $$('input.NumericalResponse').each(function(field) {
      new inputMask(field, 'number');
    });

    $$('input.PercentResponse').each(function(field) {
      new inputMask(field, 'percent');
    });

    $$('input.TextualResponse').each(function(field) {
      new inputMask(field, 'text');
    });
  }
</script>
